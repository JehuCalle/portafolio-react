{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import TextoColRND from'../Componentes/TextoColRND.jsx';import CaraOSello from\"../Componentes/CaraOSello.jsx\";import ListaDeGatos from\"../Componentes/ListaDeGatos.jsx\";import ListaGatoAPI from\"../Componentes/ListaGatoAPI.jsx\";import ListaChat from\"../Componentes/ListaChat.jsx\";import'../Css/ProyectosRND.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProyectosRND(){/* COLOR RND COLOR RND COLOR RND */const[colorRND,setColorRND]=useState({});const aplicarEstilo=()=>{const rojo=Math.floor(Math.random()*256);const verde=Math.floor(Math.random()*256);const azul=Math.floor(Math.random()*256);const color=\"rgb(\".concat(rojo,\", \").concat(verde,\", \").concat(azul,\")\");const nuevoEstilo={color:color};setColorRND(nuevoEstilo);};/* CARA O SELLO CARA O SELLO CARA O SELLO CARA O SELLO */const[historial,setHistorial]=useState([]);const[calculoResultado,setcalculoResultado]=useState('');const caraOSelloRandom=()=>{const calculo=Math.floor(Math.random()*2);if(calculo===0){setcalculoResultado(\"Cara\");}else if(calculo===1){setcalculoResultado(\"Sello\");};setMountedH(true);};const[mountedH,setMountedH]=useState(false);useEffect(()=>{if(mountedH===true){setHistorial([...historial,calculoResultado]);setMountedH(false);};},[historial,calculoResultado,mountedH]);// Establece las dependencias\nconst[resultado,setresultado]=useState('');const[respuestaCaraOSello,setrespuestaCaraOSello]=useState('');const[nombre,setnombre]=useState('');// 4- SE LLAMA LA FUNCIÓN ESTABLECIDA PARA USARLA\nconst manejarFuncionB=funcionB=>{// Llama a funcionB cuando sea necesario desde el componente A\nif(funcionB){funcionB();}};const[activarFuncionEx,setActivarFuncionEx]=useState(true);const nombreTxt=useRef(null);const respuestaTxt=useRef(null);const enviar=()=>{setnombre(nombreTxt.current.value);setrespuestaCaraOSello(respuestaTxt.current.value);caraOSelloRandom();setMounted1(true);// 5- SE LLAMA LA FUNCIÓN PARA USARLA\nmanejarFuncionB();setActivarFuncionEx(true);};const[mounted1,setMounted1]=useState(false);useEffect(()=>{// Esta función se ejecuta cuando caraOSelloTxt cambia\nconst respuestaPrimMayus=respuestaCaraOSello.charAt(0).toUpperCase()+respuestaCaraOSello.slice(1);if(mounted1===true){if(nombre!==''&&respuestaCaraOSello!==''){console.log('Nombre: '+nombre);console.log('Respuesta: '+respuestaCaraOSello);console.log('Salió: '+calculoResultado);if(respuestaPrimMayus===calculoResultado){console.log(\"Estado: Ha acertado\");setresultado(\"La respuesta de \".concat(nombre,\" ha sido \").concat(respuestaCaraOSello,\" y ha acertado\"));setMounted1(false);}else if(respuestaPrimMayus!==calculoResultado){console.log(\"Estado; Ha fallado\");setresultado(\"La respuesta de \".concat(nombre,\" ha sido \").concat(respuestaCaraOSello,\" y ha fallado\"));setMounted1(false);};console.log('//////////////');}else{console.log(\"CAMPOS VACIOS\");}};},[respuestaCaraOSello,nombre,calculoResultado,mounted1]);// Establece las dependencias\nconst[caraOSelloTxt,setcaraOSello]=useState('');const cara=()=>{console.log(\"cara\");setcaraOSello(\"Cara\");caraOSelloRandom();setMounted(true);};const sello=()=>{console.log(\"sello\");setcaraOSello(\"Sello\");caraOSelloRandom();setMounted(true);};const[mounted,setMounted]=useState(false);useEffect(()=>{// Esta función se ejecuta cuando caraOSelloTxt cambia\nif(mounted===true){if(caraOSelloTxt===calculoResultado){console.log(\"acertado\");setresultado(\"Tu respuesta ha sido \".concat(caraOSelloTxt,\" y has acertado\"));setMounted(false);}else{console.log(\"fallado\");setresultado(\"Tu respuesta ha sido \".concat(caraOSelloTxt,\" y has fallado\"));setMounted(false);};};},[caraOSelloTxt,calculoResultado,mounted]);// Establece las dependencias\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"contenedor-experimentos col-12\",children:[/*#__PURE__*/_jsx(TextoColRND,{texto:\"lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\",color:colorRND,colorRND:aplicarEstilo}),/*#__PURE__*/_jsx(CaraOSello,{enviar:enviar,cara:cara,sello:sello,respuesta:\"\".concat(resultado),resultadoCalculo:\"\".concat(calculoResultado),historial:\"\".concat(historial),refInputNom:nombreTxt,refInputRes:respuestaTxt,onFuncionB:manejarFuncionB,activarFuncionEx:\"\".concat(activarFuncionEx)}),/*#__PURE__*/_jsx(ListaDeGatos,{}),/*#__PURE__*/_jsx(ListaGatoAPI,{}),/*#__PURE__*/_jsx(ListaChat,{})]})});};export default ProyectosRND;","map":{"version":3,"names":["React","useEffect","useState","useRef","TextoColRND","CaraOSello","ListaDeGatos","ListaGatoAPI","ListaChat","jsx","_jsx","jsxs","_jsxs","ProyectosRND","colorRND","setColorRND","aplicarEstilo","rojo","Math","floor","random","verde","azul","color","concat","nuevoEstilo","historial","setHistorial","calculoResultado","setcalculoResultado","caraOSelloRandom","calculo","setMountedH","mountedH","resultado","setresultado","respuestaCaraOSello","setrespuestaCaraOSello","nombre","setnombre","manejarFuncionB","funcionB","activarFuncionEx","setActivarFuncionEx","nombreTxt","respuestaTxt","enviar","current","value","setMounted1","mounted1","respuestaPrimMayus","charAt","toUpperCase","slice","console","log","caraOSelloTxt","setcaraOSello","cara","setMounted","sello","mounted","children","className","texto","respuesta","resultadoCalculo","refInputNom","refInputRes","onFuncionB"],"sources":["D:/DiscoDx/VsCodeProyectos/portafolio-react/src/Pages/ProyectosRND.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef} from \"react\";\r\n\r\nimport TextoColRND from '../Componentes/TextoColRND.jsx';\r\nimport CaraOSello from \"../Componentes/CaraOSello.jsx\";\r\nimport ListaDeGatos from \"../Componentes/ListaDeGatos.jsx\";\r\nimport ListaGatoAPI from \"../Componentes/ListaGatoAPI.jsx\";\r\nimport ListaChat from \"../Componentes/ListaChat.jsx\";\r\n\r\nimport '../Css/ProyectosRND.css';\r\n\r\n\r\nfunction ProyectosRND(){\r\n\r\n  /* COLOR RND COLOR RND COLOR RND */\r\n  const [colorRND, setColorRND] = useState({});\r\n  const aplicarEstilo = () => {\r\n    const rojo = Math.floor(Math.random() * 256);\r\n    const verde = Math.floor(Math.random() * 256);\r\n    const azul = Math.floor(Math.random() * 256);\r\n  \r\n    const color = `rgb(${rojo}, ${verde}, ${azul})`;\r\n\r\n    const nuevoEstilo = {\r\n      color: color\r\n    };\r\n\r\n    setColorRND(nuevoEstilo);\r\n  };\r\n\r\n  /* CARA O SELLO CARA O SELLO CARA O SELLO CARA O SELLO */\r\n  const [historial, setHistorial] = useState([]);\r\n\r\n  const [calculoResultado, setcalculoResultado] = useState('');\r\n  const caraOSelloRandom = () => {\r\n    const calculo = Math.floor(Math.random() * 2);\r\n\r\n    if(calculo === 0){\r\n      setcalculoResultado(\"Cara\");\r\n    }else if(calculo === 1){\r\n      setcalculoResultado(\"Sello\");\r\n    };\r\n    setMountedH(true);\r\n  };\r\n  const [mountedH, setMountedH] = useState(false);\r\n  useEffect(() => {\r\n    if (mountedH === true){\r\n      setHistorial([...historial, calculoResultado]);\r\n      setMountedH(false);\r\n    };\r\n  }, [historial, calculoResultado, mountedH]); // Establece las dependencias\r\n\r\n  const [resultado, setresultado] = useState('');\r\n\r\n  const [respuestaCaraOSello, setrespuestaCaraOSello] = useState('');\r\n  const [nombre, setnombre] = useState('');\r\n  \r\n\r\n\r\n\r\n// 4- SE LLAMA LA FUNCIÓN ESTABLECIDA PARA USARLA\r\n  const manejarFuncionB = (funcionB) => {\r\n    // Llama a funcionB cuando sea necesario desde el componente A\r\n    if (funcionB) {\r\n      funcionB();\r\n    }\r\n  };\r\n\r\n  const [ activarFuncionEx, setActivarFuncionEx ] = useState(true);\r\n\r\n  const nombreTxt = useRef(null);\r\n  const respuestaTxt = useRef(null);\r\n  const enviar = () => {\r\n    setnombre(nombreTxt.current.value);\r\n    setrespuestaCaraOSello(respuestaTxt.current.value);\r\n\r\n    caraOSelloRandom();\r\n    setMounted1(true);\r\n    \r\n    // 5- SE LLAMA LA FUNCIÓN PARA USARLA\r\n    manejarFuncionB();\r\n    setActivarFuncionEx(true);\r\n\r\n  };\r\n\r\n  const [mounted1, setMounted1] = useState(false);\r\n  useEffect(() => {\r\n    // Esta función se ejecuta cuando caraOSelloTxt cambia\r\n\r\n    const respuestaPrimMayus = respuestaCaraOSello.charAt(0).toUpperCase() + respuestaCaraOSello.slice(1);\r\n\r\n    if (mounted1 === true) {\r\n      if (nombre !== '' && respuestaCaraOSello !== '') {\r\n        console.log('Nombre: ' + nombre)\r\n        console.log('Respuesta: ' + respuestaCaraOSello)\r\n        console.log('Salió: ' + calculoResultado)\r\n        if(respuestaPrimMayus === calculoResultado){\r\n          console.log(\"Estado: Ha acertado\");\r\n          setresultado(`La respuesta de ${nombre} ha sido ${respuestaCaraOSello} y ha acertado`);\r\n          setMounted1(false);\r\n        }else if (respuestaPrimMayus !== calculoResultado){\r\n          console.log(\"Estado; Ha fallado\");\r\n          setresultado(`La respuesta de ${nombre} ha sido ${respuestaCaraOSello} y ha fallado`);\r\n          setMounted1(false);\r\n        };\r\n        console.log('//////////////')\r\n      } else {\r\n        console.log(\"CAMPOS VACIOS\");\r\n      }\r\n    };\r\n  }, [respuestaCaraOSello, nombre, calculoResultado, mounted1]); // Establece las dependencias\r\n\r\n  const [caraOSelloTxt, setcaraOSello] = useState('');\r\n  const cara = () => {\r\n    console.log(\"cara\");\r\n\r\n    setcaraOSello(\"Cara\");\r\n\r\n    caraOSelloRandom();\r\n    setMounted(true);\r\n  };\r\n\r\n  const sello = () => {\r\n    console.log(\"sello\");\r\n    setcaraOSello(\"Sello\");\r\n\r\n    caraOSelloRandom();\r\n    setMounted(true);\r\n  };\r\n  const [mounted, setMounted] = useState(false);\r\n  useEffect(() => {\r\n    // Esta función se ejecuta cuando caraOSelloTxt cambia\r\n    if (mounted === true) {\r\n      if((caraOSelloTxt === calculoResultado)){\r\n        console.log(\"acertado\");\r\n        setresultado(`Tu respuesta ha sido ${caraOSelloTxt} y has acertado`);\r\n        setMounted(false);\r\n      }else{\r\n        console.log(\"fallado\");\r\n        setresultado(`Tu respuesta ha sido ${caraOSelloTxt} y has fallado`);\r\n        setMounted(false);\r\n      };\r\n    };\r\n  }, [caraOSelloTxt, calculoResultado, mounted]); // Establece las dependencias\r\n\r\n  return(\r\n    <div>\r\n      <div className='contenedor-experimentos col-12'>\r\n        <TextoColRND\r\n          texto = \"lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\"\r\n          color = {colorRND}\r\n          colorRND={aplicarEstilo} />\r\n        <CaraOSello\r\n          enviar={enviar}\r\n          cara={cara}\r\n          sello={sello}\r\n          respuesta={`${resultado}`}\r\n          resultadoCalculo={`${calculoResultado}`}\r\n          historial={`${historial}`}\r\n          refInputNom={nombreTxt}\r\n          refInputRes={respuestaTxt}\r\n          onFuncionB={manejarFuncionB}\r\n          activarFuncionEx = {`${activarFuncionEx}`} />\r\n        <ListaDeGatos/>\r\n        <ListaGatoAPI/>\r\n        <ListaChat/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProyectosRND;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}